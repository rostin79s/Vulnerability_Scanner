import os 
import subprocess
import sys
import llm
import cve

l = []
src_code_filename = "../../thread_race"

command = ["bash", "bash.sh", src_code_filename]
result = subprocess.run(command, capture_output=True, text=True)

error = result.stderr

# this case needs to be handled
if error==None:
    l = -1
error += "give me in the name of the vulnerability, line of code where it happens, and the function in a list of commas like this: [vuln,line,name_func]"
resp = llm.main(error)
resp = resp.strip("[]")
resp = resp.split(",")
resp = [s.strip() for s in resp]
l.append(int(resp[1]))
prompt = "This code below has a " + resp[0] + " vulenrability in the function " + resp[2] + " at line number " + resp[1] +". Fix the code and only give code as ouptut\n"
with open("../../thread_race.cpp", 'r') as file:
    code = file.read()

prompt+=code


resp = llm.main(prompt)

with open("../../thread_race_corrected.cpp",'w') as file:
    file.write(resp)


#testing that CVE api works correctly

ver = "0.26.0"
name = "Exiv2"

if cve.main(name,ver):
    l.append(1)

print(l)
