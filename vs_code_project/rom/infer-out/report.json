[{"bug_type":"THREAD_SAFETY_VIOLATION","qualifier":"Unprotected write. Non-private method `Test.buy(...)` writes to field `this.shares` outside of synchronization.\n Reporting because the current class is annotated `@ThreadSafe`, so we assume that this method can run in parallel with other non-private methods in the class (including itself).","severity":"WARNING","line":8,"column":-1,"procedure":"Test.buy(int):void","procedure_start_line":0,"file":"/home/rostin/Desktop/Vulnerability_Scanner/Test.java","bug_trace":[{"level":0,"filename":"/home/rostin/Desktop/Vulnerability_Scanner/Test.java","line_number":8,"column_number":-1,"description":"access to `this.shares`"}],"key":"Test.java|buy|THREAD_SAFETY_VIOLATION","hash":"85eb78d9a1a1f7c63155c4ae4cd278e3","bug_type_hum":"Thread Safety Violation","access":"hJWmvgAAAD0AAAAEAAAAGAAAABGgsEgA/5EJNC9ob21lL3Jvc3Rpbi9EZXNrdG9wL1Z1bG5lcmFiaWxpdHlfU2Nhbm5lci9UZXN0LmphdmFA"},{"bug_type":"THREAD_SAFETY_VIOLATION","qualifier":"Read/Write race. Non-private method `Test.sell(...)` reads without synchronization from `this.shares`. Potentially races with write in method `Test.buy(...)`.\n Reporting because the current class is annotated `@ThreadSafe`, so we assume that this method can run in parallel with other non-private methods in the class (including itself).","severity":"WARNING","line":13,"column":-1,"procedure":"Test.sell(int):int","procedure_start_line":0,"file":"/home/rostin/Desktop/Vulnerability_Scanner/Test.java","bug_trace":[{"level":0,"filename":"/home/rostin/Desktop/Vulnerability_Scanner/Test.java","line_number":13,"column_number":-1,"description":"<Read trace>"},{"level":0,"filename":"/home/rostin/Desktop/Vulnerability_Scanner/Test.java","line_number":13,"column_number":-1,"description":"access to `this.shares`"},{"level":0,"filename":"/home/rostin/Desktop/Vulnerability_Scanner/Test.java","line_number":8,"column_number":-1,"description":"<Write trace>"},{"level":0,"filename":"/home/rostin/Desktop/Vulnerability_Scanner/Test.java","line_number":8,"column_number":-1,"description":"access to `this.shares`"}],"key":"Test.java|sell|THREAD_SAFETY_VIOLATION","hash":"4256561208dbe1e087cf6a5c9f6db3fd","bug_type_hum":"Thread Safety Violation","access":"hJWmvgAAAHkAAAAIAAAAMAAAACKgsE0A/5EJNC9ob21lL3Jvc3Rpbi9EZXNrdG9wL1Z1bG5lcmFiaWxpdHlfU2Nhbm5lci9UZXN0LmphdmGgsEgA/5EJNC9ob21lL3Jvc3Rpbi9EZXNrdG9wL1Z1bG5lcmFiaWxpdHlfU2Nhbm5lci9UZXN0LmphdmFA"},{"bug_type":"THREAD_SAFETY_VIOLATION","qualifier":"Unprotected write. Non-private method `Test.sell(...)` writes to field `this.shares` outside of synchronization.\n Reporting because the current class is annotated `@ThreadSafe`, so we assume that this method can run in parallel with other non-private methods in the class (including itself).","severity":"WARNING","line":14,"column":-1,"procedure":"Test.sell(int):int","procedure_start_line":0,"file":"/home/rostin/Desktop/Vulnerability_Scanner/Test.java","bug_trace":[{"level":0,"filename":"/home/rostin/Desktop/Vulnerability_Scanner/Test.java","line_number":14,"column_number":-1,"description":"access to `this.shares`"}],"key":"Test.java|sell|THREAD_SAFETY_VIOLATION","hash":"bb31233043b46c34a53acc3a2af32d76","bug_type_hum":"Thread Safety Violation","access":"hJWmvgAAAD0AAAAEAAAAGAAAABGgsE4A/5EJNC9ob21lL3Jvc3Rpbi9EZXNrdG9wL1Z1bG5lcmFiaWxpdHlfU2Nhbm5lci9UZXN0LmphdmFA"}]
